Token: 28 func
Token: 48 :
Token: 23 int
Token: 48 :
Token: 29 main
Token: 19 _
Token: 61 loc
Token: 48 :
Token: 26 bool
Token: 48 :
Token: 2 b1
Token: 72 ;
Token: 61 loc
Token: 48 :
Token: 27 string
Token: 48 :
Token: 2 s1
Token: 72 ;
Token: 2 read
Token: 68 (
Token: 2 s1
Token: 69 )
Token: 72 ;
Token: 66 print
Token: 68 (
Token: 2 b1
Token: 69 )
Token: 72 ;
Token: 65 return
Token: 72 ;
Token: 65 return
Token: 48 :
Token: 17 1
Token: 4 +
Token: 2 f
Token: 68 (
Token: 69 )
Token: 72 ;
Token: 19 _
Token: 28 func
Token: 48 :
Token: 25 float
Token: 48 :
Token: 2 miFunc
Token: 19 _
Token: 30 param
Token: 48 :
Token: 23 int
Token: 48 :
Token: 2 dif
Token: 72 ;
Token: 30 param
Token: 48 :
Token: 24 char
Token: 48 :
Token: 2 otra
Token: 72 ;
Token: 61 loc
Token: 48 :
Token: 23 int
Token: 48 :
Token: 2 otra
Token: 72 ;
Token: 61 loc
Token: 48 :
Token: 27 string
Token: 48 :
Token: 2 str
Token: 37 =
Token: 32 Hola $%&/#$&) mundo
Token: 72 ;
Token: 55 for
Token: 48 :
Token: 2 i
Token: 48 :
Token: 56 in
Token: 48 :
Token: 57 range
Token: 68 (
Token: 2 i
Token: 4 +
Token: 17 10
Token: 31 ,
Token: 17 3
Token: 11 *
Token: 17 2
Token: 69 )
Token: 19 _
Token: 54 while
Token: 68 (
Token: 2 var2
Token: 41 >
Token: 49 12.2
Token: 46 &&
Token: 17 12
Token: 41 >
Token: 68 (
Token: 17 34
Token: 4 +
Token: 17 35
Token: 69 )
Token: 69 )
Token: 19 _
Token: 62 glob
Token: 48 :
Token: 23 int
Token: 48 :
Token: 2 var
Token: 37 =
Token: 2 var
Token: 8 -
Token: 17 1
Token: 72 ;
Token: 19 _
Token: 52 if
Token: 68 (
Token: 2 var
Token: 45 ==
Token: 17 0
Token: 69 )
Token: 19 _
Token: 66 print
Token: 68 (
Token: 32 entra al if
Token: 69 )
Token: 72 ;
Token: 19 _
Token: 52 if
Token: 68 (
Token: 50 true
Token: 69 )
Token: 19 _
Token: 66 print
Token: 68 (
Token: 2 var
Token: 69 )
Token: 72 ;
Token: 19 _
Token: 53 else
Token: 19 _
Token: 58 switch
Token: 68 (
Token: 2 otra
Token: 69 )
Token: 19 _
Token: 59 case
Token: 48 :
Token: 17 1
Token: 48 :
Token: 66 print
Token: 68 (
Token: 32 !#
Token: 69 )
Token: 72 ;
Token: 34 break
Token: 72 ;
Token: 59 case
Token: 48 :
Token: 17 2
Token: 48 :
Token: 2 otra
Token: 37 =
Token: 17 10
Token: 72 ;
Token: 34 break
Token: 72 ;
Token: 64 default
Token: 48 :
Token: 2 otra
Token: 37 =
Token: 8 -
Token: 49 10.5
Token: 11 *
Token: 8 -
Token: 49 1.9
Token: 72 ;
Token: 19 _
Token: 58 switch
Token: 68 (
Token: 2 otra2
Token: 69 )
Token: 19 _
Token: 59 case
Token: 48 :
Token: 17 10
Token: 48 :
Token: 66 print
Token: 68 (
Token: 32 un case
Token: 69 )
Token: 72 ;
Token: 34 break
Token: 72 ;
Token: 64 default
Token: 48 :
Token: 2 otra
Token: 37 =
Token: 8 -
Token: 49 10.5
Token: 11 *
Token: 8 -
Token: 49 1.9
Token: 72 ;
Token: 19 _
Token: 19 _
Token: 19 _
Token: 65 return
Token: 48 :
Token: 17 1
Token: 72 ;
Token: 19 _
Token: 28 func
Token: 48 :
Token: 26 bool
Token: 48 :
Token: 2 miOtraFun
Token: 19 _
Token: 61 loc
Token: 48 :
Token: 23 int
Token: 48 :
Token: 2 x
Token: 37 =
Token: 17 0
Token: 72 ;
Token: 65 return
Token: 48 :
Token: 8 -
Token: 49 5.6
Token: 72 ;
Token: 19 _
